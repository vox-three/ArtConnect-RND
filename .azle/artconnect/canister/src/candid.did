service: () -> {
    clearLoyalty: (nat64, principal, text) -> (variant {Ok:record {id:nat64; userId:principal; createdAt:nat64; merchantId:text; claimed:bool}; Err:variant {MerchantDoesNotExist:text; SlotDoesNotExist:nat64; NftDoesNotExist:nat64; CreatorDoesNotExist:principal; LoyaltyDoesNotExist:nat64; UserDoesNotExist:principal}});
    createCreator: (text, text, text, text, text, text, text) -> (record {id:principal; province:text; flickr:text; city:text; instagram:text; name:text; createdAt:nat64; behance:text; reddit:text});
    createLoyalty: (principal, text) -> (record {id:nat64; userId:principal; createdAt:nat64; merchantId:text; claimed:bool});
    createMerchant: (text, text, text) -> (record {lat:text; lon:text; name:text; createdAt:nat64; uuid:text; collaborations:vec principal});
    createNft: (principal, text, text) -> (variant {Ok:record {id:nat64; metadataUrl:text; userId:principal; createdAt:nat64; creatorId:principal; imageUrl:text; loyaltyId:nat64}; Err:variant {MerchantDoesNotExist:text; SlotDoesNotExist:nat64; NftDoesNotExist:nat64; CreatorDoesNotExist:principal; LoyaltyDoesNotExist:nat64; UserDoesNotExist:principal}});
    createUser: (principal) -> (record {id:principal; createdAt:nat64});
    deleteCreator: (principal) -> (variant {Ok:record {id:principal; province:text; flickr:text; city:text; instagram:text; name:text; createdAt:nat64; behance:text; reddit:text}; Err:variant {MerchantDoesNotExist:text; SlotDoesNotExist:nat64; NftDoesNotExist:nat64; CreatorDoesNotExist:principal; LoyaltyDoesNotExist:nat64; UserDoesNotExist:principal}});
    deleteLoyalty: (nat64) -> (variant {Ok:record {id:nat64; userId:principal; createdAt:nat64; merchantId:text; claimed:bool}; Err:variant {MerchantDoesNotExist:text; SlotDoesNotExist:nat64; NftDoesNotExist:nat64; CreatorDoesNotExist:principal; LoyaltyDoesNotExist:nat64; UserDoesNotExist:principal}});
    deleteMerchant: (text) -> (variant {Ok:record {lat:text; lon:text; name:text; createdAt:nat64; uuid:text; collaborations:vec principal}; Err:variant {MerchantDoesNotExist:text; SlotDoesNotExist:nat64; NftDoesNotExist:nat64; CreatorDoesNotExist:principal; LoyaltyDoesNotExist:nat64; UserDoesNotExist:principal}});
    deleteNft: (nat64) -> (variant {Ok:record {id:nat64; metadataUrl:text; userId:principal; createdAt:nat64; creatorId:principal; imageUrl:text; loyaltyId:nat64}; Err:variant {MerchantDoesNotExist:text; SlotDoesNotExist:nat64; NftDoesNotExist:nat64; CreatorDoesNotExist:principal; LoyaltyDoesNotExist:nat64; UserDoesNotExist:principal}});
    deleteUser: (principal) -> (variant {Ok:record {id:principal; createdAt:nat64}; Err:variant {MerchantDoesNotExist:text; SlotDoesNotExist:nat64; NftDoesNotExist:nat64; CreatorDoesNotExist:principal; LoyaltyDoesNotExist:nat64; UserDoesNotExist:principal}});
    queryCreatorNft: (principal) -> (vec record {id:nat64; metadataUrl:text; userId:principal; createdAt:nat64; creatorId:principal; imageUrl:text; loyaltyId:nat64}) query;
    queryLoyalty: (principal, text) -> (vec record {id:nat64; userId:principal; createdAt:nat64; merchantId:text; claimed:bool});
    queryLoyaltyNft: (nat64) -> (vec record {id:nat64; metadataUrl:text; userId:principal; createdAt:nat64; creatorId:principal; imageUrl:text; loyaltyId:nat64}) query;
    queryUserNft: (principal) -> (vec record {id:nat64; metadataUrl:text; userId:principal; createdAt:nat64; creatorId:principal; imageUrl:text; loyaltyId:nat64}) query;
    readAllCreators: () -> (vec record {id:principal; province:text; flickr:text; city:text; instagram:text; name:text; createdAt:nat64; behance:text; reddit:text}) query;
    readAllLoyalties: () -> (vec record {id:nat64; userId:principal; createdAt:nat64; merchantId:text; claimed:bool}) query;
    readAllMerchants: () -> (vec record {lat:text; lon:text; name:text; createdAt:nat64; uuid:text; collaborations:vec principal}) query;
    readAllNfts: () -> (vec record {id:nat64; metadataUrl:text; userId:principal; createdAt:nat64; creatorId:principal; imageUrl:text; loyaltyId:nat64}) query;
    readAllUsers: () -> (vec record {id:principal; createdAt:nat64}) query;
    readCreator: (principal) -> (opt record {id:principal; province:text; flickr:text; city:text; instagram:text; name:text; createdAt:nat64; behance:text; reddit:text}) query;
    readLoyalty: (nat64) -> (opt record {id:nat64; userId:principal; createdAt:nat64; merchantId:text; claimed:bool}) query;
    readMerchant: (text) -> (opt record {lat:text; lon:text; name:text; createdAt:nat64; uuid:text; collaborations:vec principal}) query;
    readNft: (nat64) -> (opt record {id:nat64; metadataUrl:text; userId:principal; createdAt:nat64; creatorId:principal; imageUrl:text; loyaltyId:nat64}) query;
    readUser: (principal) -> (opt record {id:principal; createdAt:nat64}) query;
    sendNft: (nat64, principal, nat64) -> (variant {Ok:record {id:nat64; metadataUrl:text; userId:principal; createdAt:nat64; creatorId:principal; imageUrl:text; loyaltyId:nat64}; Err:variant {MerchantDoesNotExist:text; SlotDoesNotExist:nat64; NftDoesNotExist:nat64; CreatorDoesNotExist:principal; LoyaltyDoesNotExist:nat64; UserDoesNotExist:principal}});
}
